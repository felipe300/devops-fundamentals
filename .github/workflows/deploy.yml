---
name: Build & Deploy Zola with Docker

"on":
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build Docker image
        run: docker build -t zola-site .

      - name: Extract public folder
        run: |
          mkdir -p ./public
          container_id=$(docker create zola-site)
          docker cp $container_id:/public ./public
          docker rm $container_id

      - name: Upload public folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-folder
          path: ./public

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox, edge]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: public-folder
          path: ./public

      - name: Install Dependencies
        run: npm install cypress http-server

      - name: Start server
        run: npx http-server ./public -p 8080 &

      - name: Run Cypress tests on ${{ matrix.browser }}
        run: |
          npx cypress run --browser ${{ matrix.browser }} \
          --config baseUrl=http://localhost:8080

      - name: Upload Cypress results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results-${{ matrix.browser }}
          path: |
            cypress/screenshots
            cypress/videos

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download public folder artifact
        uses: actions/download-artifact@v4
        with:
          name: public-folder
          path: ./public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/*
          publish_branch: gh-pages
